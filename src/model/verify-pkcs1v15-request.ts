// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Hash } from '../model/hash';


export class VerifyPKCS1v15Request {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):VerifyPKCS1v15Request {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsVerifyPKCS1v15Request(bb:flatbuffers.ByteBuffer, obj?:VerifyPKCS1v15Request):VerifyPKCS1v15Request {
  return (obj || new VerifyPKCS1v15Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsVerifyPKCS1v15Request(bb:flatbuffers.ByteBuffer, obj?:VerifyPKCS1v15Request):VerifyPKCS1v15Request {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new VerifyPKCS1v15Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

signature():string|null
signature(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
signature(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

hash():Hash {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : Hash.MD5;
}

mutate_hash(value:Hash):boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb!.writeInt32(this.bb_pos + offset, value);
  return true;
}

publicKey():string|null
publicKey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
publicKey(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startVerifyPKCS1v15Request(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addSignature(builder:flatbuffers.Builder, signatureOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, signatureOffset, 0);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, messageOffset, 0);
}

static addHash(builder:flatbuffers.Builder, hash:Hash) {
  builder.addFieldInt32(2, hash, Hash.MD5);
}

static addPublicKey(builder:flatbuffers.Builder, publicKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, publicKeyOffset, 0);
}

static endVerifyPKCS1v15Request(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createVerifyPKCS1v15Request(builder:flatbuffers.Builder, signatureOffset:flatbuffers.Offset, messageOffset:flatbuffers.Offset, hash:Hash, publicKeyOffset:flatbuffers.Offset):flatbuffers.Offset {
  VerifyPKCS1v15Request.startVerifyPKCS1v15Request(builder);
  VerifyPKCS1v15Request.addSignature(builder, signatureOffset);
  VerifyPKCS1v15Request.addMessage(builder, messageOffset);
  VerifyPKCS1v15Request.addHash(builder, hash);
  VerifyPKCS1v15Request.addPublicKey(builder, publicKeyOffset);
  return VerifyPKCS1v15Request.endVerifyPKCS1v15Request(builder);
}
}
